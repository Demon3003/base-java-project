name:
  builder-dev

services:
  body-builder-app:
    image: body-builder-app:dev
    build:
      context: .
      target: dev
    volumes:
      - logs_app_v:/app/logs
    ports:
      - "8080:8080"
      - "8000:8000"
    networks:
      - builder_app_net
    environment:
      POSTGRES_URL: ${POSTGRES_URL-jdbc:postgresql://builder-db/body_builder_db}
      POSTGRES_USERNAME: ${POSTGRES_USERNAME}
      POSTGRES_PASSWORD: ${POSTGRES_PASSWORD}
      REDIS_HOST: redis
      REDIS_PORT: 6379
      REDIS_PASSWORD: ${REDIS_PASSWORD}
    restart: always
    depends_on:
      redis:
        condition: service_healthy
      builder-db:
        condition: service_healthy

  redis:
    image: redis:7.2.3-alpine3.19
    command: '--requirepass ${REDIS_PASSWORD}'
    volumes:
      - redis_v:/data
    ports:
      - "6379:6379"
    networks:
      - builder_app_net
    healthcheck:
      test: [ "CMD", "redis-cli", "--raw", "incr", "ping" ]
      interval: 5s
      timeout: 30s
      retries: 3

  builder-db:
    image: postgres:15.5-alpine3.19
    environment:
      POSTGRES_HOST: builder-db
      POSTGRES_USER: dmytro_body_builder
      POSTGRES_PASSWORD: 1111
      POSTGRES_DB: body_builder_db
    networks:
      - builder_app_net
    ports:
      - "5432:5432"
    volumes:
      - builder_db_v:/var/lib/postgresql/data
    healthcheck:
      test: [ "CMD-SHELL", "sh -c 'pg_isready -U dmytro_body_builder -d body_builder_db'" ]
      interval: 5s
      timeout: 30s
      retries: 3

volumes:
  logs_app_v:
  redis_v:
  builder_db_v:

networks:
  builder_app_net:
